apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "extensionlib.names.fullname" . }}
  namespace: {{ .Release.Namespace }}
  {{ if .Values.deploymentAnnotations }}
  annotations:
    {{- with .Values.deploymentAnnotations }}
    {{- toYaml . | nindent 4 }}
    {{- end }}
  {{- end }}
  labels:
  {{- range $key, $value := .Values.extraLabels }}
    {{ $key }}: {{ $value }}
  {{- end }}
  {{- include "extensionlib.labels" (list .) | nindent 4 }}
spec:
  replicas: 1
  selector:
    matchLabels:
      {{- include "extensionlib.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        {{- include "extensionlib.selectorLabels" . | nindent 8 }}
        {{- include "extensionlib.labels" (list .) | nindent 8 }}
        {{- range $key, $value := .Values.extraLabels }}
        {{ $key }}: {{ $value }}
        {{- end }}
        {{- with .Values.podLabels }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
      annotations:
        oneagent.dynatrace.com/injection: "false"
        {{- with .Values.podAnnotations }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
    spec:
      {{- with .Values.priorityClassName }}
      priorityClassName: {{ . }}
      {{- end }}
      {{- with .Values.podSecurityContext }}
      securityContext:
      {{- toYaml . | nindent 8 }}
      {{- end }}
      containers:
        - image: {{ .Values.image.name }}:{{ default .Chart.AppVersion .Values.image.tag }}
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          name: extension
          resources:
            requests:
              memory: {{ .Values.resources.requests.memory }}
              cpu: {{ .Values.resources.requests.cpu }}
            limits:
              memory: {{ .Values.resources.limits.memory }}
              cpu: {{ .Values.resources.limits.cpu }}
          env:
            - name: AZURE_CLIENT_ID
              valueFrom:
                secretKeyRef:
                  name: {{ include "azure.secret.name" . }}
                  key: clientID
            - name: AZURE_TENANT_ID
              valueFrom:
                secretKeyRef:
                  name: {{ include "azure.secret.name" . }}
                  key: tenantID
            - name: AZURE_CLIENT_SECRET
              valueFrom:
                secretKeyRef:
                  name: {{ include "azure.secret.name" . }}
                  key: clientSecret
                  optional: true
            - name: AZURE_SUBSCRIPTION_ID
              valueFrom:
                secretKeyRef:
                  name: {{ include "azure.secret.name" . }}
                  key: subscriptionID
                  optional: true
            - name: STEADYBIT_EXTENSION_AZURE_CERTIFICATE_PATH
              valueFrom:
                secretKeyRef:
                  name: {{ include "azure.secret.name" . }}
                  key: certificatePath
                  optional: true
            - name: STEADYBIT_EXTENSION_AZURE_CERTIFICATE_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ include "azure.secret.name" . }}
                  key: certificatePassword
                  optional: true
            - name: STEADYBIT_EXTENSION_AZURE_USER_ASSERTION_STRING
              valueFrom:
                secretKeyRef:
                  name: {{ include "azure.secret.name" . }}
                  key: userAssertionString
                  optional: true
            {{- if .Values.discovery.attributes.excludes.scaleSetInstance }}
            - name: STEADYBIT_EXTENSION_DISCOVERY_ATTRIBUTES_EXCLUDES_SCALE_SET_INSTANCE
              value: {{ join "," .Values.discovery.attributes.excludes.scaleSetInstance | quote }}
            {{- end }}
            {{- if .Values.discovery.attributes.excludes.vm }}
            - name: STEADYBIT_EXTENSION_DISCOVERY_ATTRIBUTES_EXCLUDES_VM
              value: {{ join "," .Values.discovery.attributes.excludes.vm | quote }}
            {{- end }}
            {{- if .Values.discovery.attributes.excludes.azureFunction }}
            - name: STEADYBIT_EXTENSION_DISCOVERY_ATTRIBUTES_EXCLUDES_AZURE_FUNCTION
              value: {{ join "," .Values.discovery.attributes.excludes.azureFunction | quote }}
            {{- end }}
            {{- if .Values.discovery.attributes.excludes.networkSecurityGroup }}
            - name: STEADYBIT_EXTENSION_DISCOVERY_ATTRIBUTES_EXCLUDES_NETWORK_SECURITY_GROUP
              value: {{ join "," .Values.discovery.attributes.excludes.networkSecurityGroup | quote }}
            {{- end }}
            - name: STEADYBIT_EXTENSION_DISCOVERY_ENABLE_VIRTUAL_MACHINES
              value: "{{ if .Values.discovery.enable.vm }}true{{ else }}false{{ end }}"
            - name: STEADYBIT_EXTENSION_DISCOVERY_ENABLE_SCALE_INSTANCES
              value: "{{ if .Values.discovery.enable.scaleSetInstance }}true{{ else }}false{{ end }}"
            - name: STEADYBIT_EXTENSION_DISCOVERY_ENABLE_AZURE_FUNCTIONS
              value: "{{ if .Values.discovery.enable.azureFunction }}true{{ else }}false{{ end }}"
            - name: STEADYBIT_EXTENSION_DISCOVERY_ENABLE_NETWORK_SECURITY_GROUPS
              value: "{{ if .Values.discovery.enable.networkSecurityGroup }}true{{ else }}false{{ end }}"
            {{- include "extensionlib.deployment.env" (list .) | nindent 12 }}
            {{- with .Values.extraEnv }}
              {{- toYaml . | nindent 12 }}
            {{- end }}
          {{- with .Values.extraEnvFrom }}
          envFrom:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          volumeMounts:
            {{- include "extensionlib.deployment.volumeMounts" (list .) | nindent 12 }}
          livenessProbe:
            initialDelaySeconds: {{ .Values.probes.liveness.initialDelaySeconds }}
            periodSeconds: {{ .Values.probes.liveness.periodSeconds }}
            timeoutSeconds: {{ .Values.probes.liveness.timeoutSeconds }}
            successThreshold: {{ .Values.probes.liveness.successThreshold }}
            failureThreshold: {{ .Values.probes.liveness.failureThreshold }}
            httpGet:
              path: /health/liveness
              port: 8081
          readinessProbe:
            initialDelaySeconds: {{ .Values.probes.readiness.initialDelaySeconds }}
            periodSeconds: {{ .Values.probes.readiness.periodSeconds }}
            timeoutSeconds: {{ .Values.probes.readiness.timeoutSeconds }}
            successThreshold: {{ .Values.probes.readiness.successThreshold }}
            failureThreshold: {{ .Values.probes.readiness.failureThreshold }}
            httpGet:
              path: /health/readiness
              port: 8081
          {{- with .Values.containerSecurityContext }}
          securityContext:
          {{- toYaml . | nindent 12 }}
          {{- end }}
      volumes:
        {{- include "extensionlib.deployment.volumes" (list .) | nindent 8 }}
      serviceAccountName: {{ .Values.serviceAccount.name }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
      {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
      {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
      {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.topologySpreadConstraints }}
      topologySpreadConstraints:
      {{- toYaml . | nindent 8 }}
      {{- end }}
